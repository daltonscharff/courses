Although the user time was higher on average as the number of threads increased, the real time dropped when changing from 1 thread to 4 threads (but not from 1 to 2 threads). The user time is expected to get higher as you increase the amounts of threads utilized because more threads means more overhead due to forking and joining (which is handled by OpenMP). Apparently, the overhead difference between 1 thread and 2 threads was too great to increase runtime at this 'small' of a graph. Yet, creating 4 threads gave us enough of a time decrease that, even with the extra overhead, the average time still decreased.
Had our graph matrix been larger, large enough to have taken seconds or minutes to compute, we most likely would continue to see a decrease in real time between 1 thread and 4 threads, but also a decrease in real time between 1 thread and 2 threads. 4 threads would still be the quickest though. 
